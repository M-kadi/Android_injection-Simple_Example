// Generated by Dagger (https://dagger.dev).
package com.example.hilt.inject_constructor_with_parameter;

import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity2_MembersInjector implements MembersInjector<MainActivity2> {
  private final Provider<Car1> car1Provider;

  private final Provider<Car4> car4Provider;

  public MainActivity2_MembersInjector(Provider<Car1> car1Provider, Provider<Car4> car4Provider) {
    this.car1Provider = car1Provider;
    this.car4Provider = car4Provider;
  }

  public static MembersInjector<MainActivity2> create(Provider<Car1> car1Provider,
      Provider<Car4> car4Provider) {
    return new MainActivity2_MembersInjector(car1Provider, car4Provider);
  }

  @Override
  public void injectMembers(MainActivity2 instance) {
    injectCar1(instance, car1Provider.get());
    injectCar4(instance, car4Provider.get());
  }

  @InjectedFieldSignature("com.example.hilt.inject_constructor_with_parameter.MainActivity2.car1")
  public static void injectCar1(MainActivity2 instance, Car1 car1) {
    instance.car1 = car1;
  }

  @InjectedFieldSignature("com.example.hilt.inject_constructor_with_parameter.MainActivity2.car4")
  public static void injectCar4(MainActivity2 instance, Car4 car4) {
    instance.car4 = car4;
  }
}
