// Generated by Dagger (https://dagger.dev).
package com.example.hilt;

import com.example.hilt.room.UserDao;
import com.example.hilt.room.UserRepository;
import com.example.hilt.sqlite.DbHelper;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Named;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<String> constant_strProvider;

  private final Provider<DbHelper> dbHelperProvider;

  private final Provider<Car2> car2Provider;

  private final Provider<Car3> car3Provider;

  private final Provider<MySharedPreferences> mySharedPreferencesProvider;

  private final Provider<UserDao> userDaoProvider;

  private final Provider<UserRepository> repositoryProvider;

  public MainActivity_MembersInjector(Provider<String> constant_strProvider,
      Provider<DbHelper> dbHelperProvider, Provider<Car2> car2Provider, Provider<Car3> car3Provider,
      Provider<MySharedPreferences> mySharedPreferencesProvider, Provider<UserDao> userDaoProvider,
      Provider<UserRepository> repositoryProvider) {
    this.constant_strProvider = constant_strProvider;
    this.dbHelperProvider = dbHelperProvider;
    this.car2Provider = car2Provider;
    this.car3Provider = car3Provider;
    this.mySharedPreferencesProvider = mySharedPreferencesProvider;
    this.userDaoProvider = userDaoProvider;
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<String> constant_strProvider,
      Provider<DbHelper> dbHelperProvider, Provider<Car2> car2Provider, Provider<Car3> car3Provider,
      Provider<MySharedPreferences> mySharedPreferencesProvider, Provider<UserDao> userDaoProvider,
      Provider<UserRepository> repositoryProvider) {
    return new MainActivity_MembersInjector(constant_strProvider, dbHelperProvider, car2Provider, car3Provider, mySharedPreferencesProvider, userDaoProvider, repositoryProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectConstant_str(instance, constant_strProvider.get());
    injectDbHelper(instance, dbHelperProvider.get());
    injectCar2(instance, car2Provider.get());
    injectCar3(instance, car3Provider.get());
    injectMySharedPreferences(instance, mySharedPreferencesProvider.get());
    injectUserDao(instance, userDaoProvider.get());
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.constant_str")
  @Named("constant_str")
  public static void injectConstant_str(MainActivity instance, String constant_str) {
    instance.constant_str = constant_str;
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.dbHelper")
  public static void injectDbHelper(MainActivity instance, DbHelper dbHelper) {
    instance.dbHelper = dbHelper;
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.car2")
  public static void injectCar2(MainActivity instance, Car2 car2) {
    instance.car2 = car2;
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.car3")
  public static void injectCar3(MainActivity instance, Car3 car3) {
    instance.car3 = car3;
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.mySharedPreferences")
  public static void injectMySharedPreferences(MainActivity instance,
      MySharedPreferences mySharedPreferences) {
    instance.mySharedPreferences = mySharedPreferences;
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.userDao")
  public static void injectUserDao(MainActivity instance, UserDao userDao) {
    instance.userDao = userDao;
  }

  @InjectedFieldSignature("com.example.hilt.MainActivity.repository")
  public static void injectRepository(MainActivity instance, UserRepository repository) {
    instance.repository = repository;
  }
}
